You are given an array of n strings strs, all of the same length.

The strings can be arranged such that there is one on each line, making a grid.



For example, strs = ["abc", "bce", "cae"] can be arranged as:

abc
bce
cae

Output: 1

Input: strs = ["zyx","wvu","tsr"]

Output: 3

Explanation: The grid looks as follows:

  zyx
  wvu
  tsr

All 3 columns are not sorted, so you will delete all 3.

String letters = "abcdefghiopqrstuvwxyz";
for(int i = 0; i < strs[0].length; i++) {
    for(int j = 0; j < strs.length - 2; j++) {
        int firstIndex = letters.indexOf(strs[j].charAt(i));
        int secondIndex = letters.indexOf(strs[j + 1].charAt(i));
        int thirdIndex = letters.indexOf(strs[j + 2].charAt(i));
        if(firstIndex > secondIndex || secondIndex > thirdIndex) count++;
    }
}
return count;


int nums[] = {2,7,11,15,6,3,8,1,4,5}, target = 9

{1, 2, 3, 4, 5, 6, 7, 8, 11, 15}

Arrays.sort(nums);
//for(int i = 0; i < nums.length; i++) {
    int start = 0, end = nums.length - 1;
    while(start < end) {
        if(nums[start] + nums[end] > target) {
            end--;
        } else if(nums[start] + nums[end] < target) {
            start++;
        } else {
            System.out.println(nums[start] + "," + nums[end]);
            start++;
            end--;
        }
    }
//}
[1, 8], [2, 7], [3, 6], [4,5]
