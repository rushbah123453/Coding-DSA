Atomicity:
Either the entire transaction happens at once or doesnt happens at all
Abort or commit
—Abort: If a transaction aborts, changes made to database are not visible.
—Commit: If a transaction commits, changes made are visible.

Consistency:
 is used to make sure that the data which is been modified in the database is not corrupted
For example,     in an application that transfers funds from one account to another, the consistency
property ensures that the total value of funds in both the accounts is the same at the start and end of each transaction.

Isolation:  is used to ensure that multiple transactions that occur concurrently
don’t leave the database in an inconsistent manner.

Changes occurring in a particular transaction will not be visible to any other transaction
until that particular change in that transaction is written to memory or has been committed.

Durability : is used to ensure that once the data is committed it will
remain the same and not get affected by system failure.